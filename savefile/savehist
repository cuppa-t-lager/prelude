;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(regexp-search-ring compile-history magit-read-file-hist helm-ag--helm-history magit-git-command-history query-replace-from-to-history tmm--history swiper-history xref--read-pattern-history sql-user-history grep-files-history locate-history-list helm-occur-history sgml-tag-history grep-regexp-history buffer-name-history bookmark-history input-method-history helm-apropos-history helm-file-name-history helm-dash-history-input helm-surfraw-input-history ivy-history regexp-history imenu--history-list read-expression-history face-name-history magit-revision-history shell-command-history query-replace-history helm-grep-history helm-M-x-input-history search-ring anzu--history minibuffer-history file-name-history extended-command-history))
(setq regexp-search-ring '("scheds" "organisations" "cflocation" "copyfilestojob" "CopyFilesToJob" "getFileDetails" "getfoldersandfilesdatabylinkid" "getfolderdata" "FolderContent" "delete" "\\(delete\\).*?\\(all\\).*?\\(the\\).*?\\(cache\\)" "setexpirydate" "disablefields" "display" "caneditjob" "minDate"))
(setq helm-ag--helm-history '("Filterise"))
(setq tmm--history '("f==>find-file-in-project-by-selected" "S==>sgml-skip-tag-forward <M-right>" "s==>sgml-skip-tag-backward <M-left>" "p==>pop-global-mark C-x C-SPC  C-x C-@" "3==>avy-goto-char" "G==>avy-goto-char-2            C-'" "g==>avy-goto-line            M-g l" "A==>avy-goto-word-1          M-g w" "a==>avy-goto-word-or-subword-1  C-c j" "l==>list-matching-lines" "I==>iy-go-to-char-backward   M-s-≤" "i==>iy-go-to-char            M-s-≥" "2==>find-file-with-similar-name  M-s-–" "1==>find-file-in-project     M-s-π" "0==>find-file-at-point       M-s-ƒ" "F==>find-file-in-repository  M-s-®" "f==>find-file-in-project-by-selected" "S==>sgml-skip-tag-forward <M-right>" "s==>sgml-skip-tag-backward <M-left>" "p==>pop-global-mark C-x C-SPC  C-x C-@" "3==>avy-goto-char" "G==>avy-goto-char-2            C-'" "g==>avy-goto-line            M-g l" "A==>avy-goto-word-1          M-g w" "a==>avy-goto-word-or-subword-1  C-c j" "l==>list-matching-lines" "I==>iy-go-to-char-backward   M-s-≤" "i==>iy-go-to-char            M-s-≥" "2==>find-file-with-similar-name  M-s-–" "1==>find-file-in-project     M-s-π" "0==>find-file-at-point       M-s-ƒ" "F==>find-file-in-repository  M-s-®" "f==>find-file-in-project-by-selected" "S==>sgml-skip-tag-forward <M-right>" "s==>sgml-skip-tag-backward <M-left>" "p==>pop-global-mark C-x C-SPC  C-x C-@" "3==>avy-goto-char" "G==>avy-goto-char-2            C-'" "g==>avy-goto-line            M-g l" "A==>avy-goto-word-1          M-g w" "a==>avy-goto-word-or-subword-1  C-c j" "l==>list-matching-lines" "I==>iy-go-to-char-backward   M-s-≤" "i==>iy-go-to-char            M-s-≥" "2==>find-file-with-similar-name  M-s-–" "1==>find-file-in-project     M-s-π" "0==>find-file-at-point       M-s-ƒ" "F==>find-file-in-repository  M-s-®" "f==>find-file-in-project-by-selected" "S==>sgml-skip-tag-forward <M-right>" "s==>sgml-skip-tag-backward <M-left>" "p==>pop-global-mark C-x C-SPC  C-x C-@" "3==>avy-goto-char" "G==>avy-goto-char-2            C-'" "g==>avy-goto-line            M-g l" "A==>avy-goto-word-1          M-g w" "a==>avy-goto-word-or-subword-1  C-c j" "l==>list-matching-lines" "I==>iy-go-to-char-backward   M-s-≤" "i==>iy-go-to-char            M-s-≥" "2==>find-file-with-similar-name  M-s-–" "1==>find-file-in-project     M-s-π" "0==>find-file-at-point       M-s-ƒ" "F==>find-file-in-repository  M-s-®" "f==>find-file-in-project-by-selected"))
(setq swiper-history '(#("scheds" 0 6 (ivy-index 2)) "cfschedule" "getOrg" "getorg" #("organisations" 0 13 (ivy-index 1)) "cflocation" "cflocation" "cflocation" #("cflocation" 0 10 (ivy-index 9)) "			<cflocation addtoken=\"false\"  url=\"LEFT_MENU_index\\.cfm\\?page=managefolders&reloadleftmenu=yes\">" "FolderContent" "FolderContent" #("copyfilestojob" 0 14 (ivy-index 1)) #("CopyFilesToJob" 0 14 (ivy-index 1)) "managefoldersproccess" #("getFileDetails" 0 14 (ivy-index 2)) "@orgid" #("getfoldersandfilesdatabylinkid" 0 30 (ivy-index 2)) "foldercontent" #("getfolderdata" 0 13 (ivy-index 2)) #("FolderContent" 0 13 (ivy-index 2)) #("delete" 0 6 (ivy-index 7)) #("delete all the cache" 0 20 (ivy-index 1)) #("setexpirydate" 0 13 (ivy-index 6)) "opostmarkservice" "getjobmanagementinformationbyjobid" "canstatuschangeonly" #("disablefields" 0 13 (ivy-index 4)) #("display" 0 7 (ivy-index 0)) "canstatuschangeonly" #("caneditjob" 0 10 (ivy-index 0)) "hasadminaccess" "hasadminaccess" "rngestart" #("minDate" 0 7 (ivy-index 11)) #("irangeoperatorvalue" 0 19 (ivy-index 0)) #("setvalidationattributes" 0 23 (ivy-index 1)) #("filezone" 0 8 (ivy-index 101)) #("hasadminaccess" 0 14 (ivy-index 12)) #("leftmenu_deletelinkfolder_checkchildren" 0 39 (ivy-index 0)) #("leftmenu_renamefolder" 0 21 (ivy-index 0)) #("managefoldersproccess" 0 21 (ivy-index 0)) #("projectile-r" 0 12 (ivy-index 1)) #("helm-pro" 0 8 (ivy-index 0)) #("ripgrep" 0 7 (ivy-index 4)) "qgetcaacheddata" "logicalcomponent" "jobTypeKey" #("oCachedData" 0 11 (ivy-index 0)) #("useCache" 0 8 (ivy-index 5)) "displaymodel" "setrangeoperator" "rangeoperatorvalue" #("getvalidaterange" 0 16 (ivy-index 0)) #("getbvalidaterange" 0 17 (ivy-index 1)) #("\"getbvalidaterange" 0 18 (ivy-index 0)) #("setsvalidationattributes" 0 24 (ivy-index 0)) #("getvalidationtypeid" 0 19 (ivy-index 0)) "getanswerrequirederror" #("getquestiontypeid" 0 17 (ivy-index 0)) #("answerrequired" 0 14 (ivy-index 6)) "setquestion" "responsecollection" "variables\\.instance" #("variables\\.instance" 0 19 (ivy-index 0)) "getrangestart" "getvalidationattributes" #("validationattributes" 0 20 (ivy-index 4)) "getvalidationattributes" "displaydeadlinedate" "deadlinedate" #("deadlinedate" 0 12 (ivy-index 2)) #("loadformsettings" 0 16 (ivy-index 0)) #("displaydeadlinedate" 0 19 (ivy-index 0)) "cfdump" "cfdump" "cfdump" #("setrangeoperatorvalue" 0 21 (ivy-index 1)) #("createquestionobjectbyquestiontype" 0 34 (ivy-index 1)) #("readquestion" 0 12 (ivy-index 0)) #("oquestion" 0 9 (ivy-index 29)) #("getquestiongroupid" 0 18 (ivy-index 0)) "\"local\"" "\"local\"" "tse" #("selectall" 0 9 (ivy-index 1)) "ocacheddata" #("setAccess" 0 9 (ivy-index 0)) #("copyselection" 0 13 (ivy-index 1)) #("cached_date" 0 11 (ivy-index 0)) #("cached" 0 6 (ivy-index 5)) #("##tbl_temp_responses" 0 20 (ivy-index 0)) #("getallresp" 0 10 (ivy-index 0)) "getAllres" #("getAllR" 0 7 (ivy-index 2)) #("org\\.apache\\.poi\\.hssf\\.usermodel " 0 34 (ivy-index 1)) "updatefromargs" "saveform" "\"iRangeOperatorValue" #("ocache" 0 6 (ivy-index 2))))
(setq grep-files-history '("*.cfm" "*.js" "*.cf[cm]" "*.js" "*.js"))
(setq locate-history-list '("jobIDMask" "746"))
(setq helm-occur-history '("dump" "cfdump" "\\<?c?f?function" "function" "\\<[]function"))
(setq grep-regexp-history '("survey" "userResetDefaultColumns" "sortable" "@ui" "100"))
(setq buffer-name-history '("questionBuilder.cfc" "question.cfc" "question.cfc" "questionBuilder.cfc" "questionBuilder.cfc" "questionBuilder.cfc" "questionBuilder.cfc" "questionBuilder.cfc" "questionBuilder.cfc" "surveyExportDetail.cfm" "questionBuilder.cfc" "JobTypeStatusesGateway.cfc"))
(setq bookmark-history '("init.el" "mykeycommands.el" "init.el" "mykeycommands.el" "init.el" "init.el" "init.el" "init.el" "mykeycommands.el" "init.el" "mykeycommands.el" "init.el" "mykeycommands.el" "init.el" "mykeycommands.el" "init.el" "hosts" "hosts" "hosts" "hosts" "init.el" "mykeycommands.el" "init.el" "myfunctions.el" "myfunctions.el" "mykeycommands.el" "init.el" "mykeycommands.el" "init.el" "init.el" "mykeycommands.el" "init.el" "mymenu.el" "mykeycommands.el" "init.el" "init.el" "mykeycommands.el" "init.el" "mykeycommands.el" "init.el" "mykeycommands.el" "mykeycommands.el" "init.el" "init.el" "mykeycommands.el" "mykeycommands.el" "init.el" "init.el" "mykeycommands.el" "init.el" "mykeycommands.el" "init.el" "init.el" "mykeycommands.el" "init.el" "mykeycommands.el" "init.el" "mykeycommands.el" "mykeycommands.el" "init.el" "mykeycommands.el" "init.el" "mykeycommands.el" "init.el" "mykeycommands.el" "init.el" "init.el" "mykeycommands.el" "init.el" "init.el" "init.el" "init.el" "init.el" "init.el" "init.el" "init.el" "hosts" "init.el" "init.el" "init.el" "init.el" "init.el" "init.el" "mymenu.el" "mykeycommands.el" "init.el" "mykeycommands.el" "init.el" "hosts" "mykeycommands.el" "init.el" "init.el" "init.el" "init.el" "function sendNotification( jobID )" "init.el" "init.el" "mykeycommands.el" "init.el" "mykeycommands.el" "init.el" "init.el" "init.el" "mykeycommands.el" "init.el" "init.el" "mykeycommands.el" "init.el" "mykeycommands.el" "hosts" "init.el" "init.el" "init.el" "init.el" "init.el" "init.el" "init.el" "init.el" "init.el" "init.el" "function setAndSubscribeJobOwnerRole(" "init.el" "mykeycommands.el" "init.el" "mykeycommands.el" "mykeycommands.el" "myfunctions.el" "init.el" "init.el" "init.el" "init.el" "init.el" "init.el" "mykeycommands.el" "init.el"))
(setq helm-apropos-history '("helm multi" "er/con" "er/e" "expan" "swap" "ace-sw" "indent-rel" "ace-i" "save-" "buffer" "back-button-local-backward" "back-button-local-forward" "white" "imenu-" "imenu-add" "pop-gl"))
(setq helm-file-name-history '("pre_core.sql" "server.json" "buildAndRunDevelopment.sh" "pre_client.sql" "post_core.sql" "post_client.sql" "Application.cfc" "database.cfc" "index.cfm" "UserRecordsetColumn.cfc" "form.cfm" "JobChangeSet.cfc" "DefaultXmlBeanFactory.cfc" "JobManagement.cfc" "SubscriptionEmailTemplates.cfc" "main.css" "CachedData.cfc" "search.cfm" "SurveyResponseService.cfc" "ajax.cfc" "MailService.cfc" "UserJobEventSubscriptionGateway.cfc" "pre_client.sql" "UserStatusDefaultSubscriptionGateway.cfc" "UserJobEventSubscriptionService.cfc" "JobTypeStatusesService.cfc" "assignees.cfm" "job_management_table.cfc" "index.cfm" "templates.cfm" "main.js" "pre_client.sql" "post_client.sql" "post_client.sql" "post_client.sql" "pre_client.sql" "dashboard.cfm" "sendEmail.cfc" "RoleStatusChangeDefaultSubscriptionGateway.cfc" "RoleStatusChangeDefaultSubscriptionService.cfc" "deadlinereminders.cfm" "JobStatus.cfc" "PostmarkService.cfc" "RoleEventDefaultSubscription.cfc" "brief-files.cfm" "artwork-files.cfm" "notification.cfc" "user.cfc" "questionUserInput.cfc" "questionDeadlineDate.cfc" "cfcClientInformation.cfc" "questionBuilder.cfc" "SurveyResponse.cfc" "post_core.sql" "pre_core.sql" "post_client.sql" "app.cfc" "dashboardColumns.cfm" "answerGateway.cfc" "questionMultiChoiceSingleAnswer.cfc" "ajax.cfc" "mymenu.el" "Postmark.cfc" "admin_menu.cfm" "admin_menu.cfc" "pre_client.sql" "pre_client.sql" "pre_core.sql" "index.cfm" "thumb.cfm" "TeamSubscriptionService.cfc" "UserJobEventSubscription.cfc" "SubscriptionRoleGateway.cfc" "SubscriptionRoleService.cfc" "TeamSubscriptionService.cfc" "buttons-bar.cfm" "index.cfm" "page.cfc" "TeamSubscriptionGateway.cfc" "TeamSubscriptions.cfc" "manageTeam.cfm" "RoleStatusChangeDefaultSubscription.cfc" "RoleEventDefaultSubscriptionService.cfc" "RoleEventDefaultSubscriptionGateway.cfc" "createcolumn.yasnippet" "createforeignkey.yasnippet" "TeamJobManagementService.cfc" "clientTeam.cfc" "subscriptions.cfm" "DeadlineReminderService.cfc" "SubscriptionEmailService.cfc" "commentService.cfc" "permission.cfc" "JobStatusService.cfc" "questionService.cfc" "question.cfc" "SurveyDeadlineQuestionService.cfc" "SurveyDeadlineResponse.cfc" "edit_user.cfm"))
(setq helm-dash-history-input '("cfqueryparam"))
(setq ivy-history '(#("cfcFile" 0 7 (ivy-index 8)) #("Cryp" 0 4 (ivy-index 0)) #("brief-file" 0 10 (ivy-index 0)) #("question" 0 8 (ivy-index 10)) #("surveyre" 0 8 (ivy-index 0)) #("comments" 0 8 (ivy-index 4)) #(" (global-set-key (kbd \"M-s-\\\\\")              'indent-relative)" 0 1 (swiper-line-number "32  " display "32  ") 1 2 (fontified t face (rainbow-delimiters-depth-1-face)) 2 17 (fontified t) 17 18 (fontified t face (rainbow-delimiters-depth-2-face)) 18 22 (fontified t) 22 30 (fontified t face font-lock-string-face) 30 31 (fontified t face (rainbow-delimiters-depth-2-face)) 31 61 (fontified t) 61 62 (fontified t face (rainbow-delimiters-depth-1-face))) #("communicationFeedback" 0 21 (ivy-index 0)) #("search.cfm" 0 10 (ivy-index 1))))
(setq regexp-history '("erver" "getDe" "view" "function"))
(setq imenu--history-list '("save" "survey" "save" "canEditJobs" "jobs" "survey" "_getSurveyQuestionChanges" "save" "filterSurveyQuestions" "save" "sendNotification" "save" "getFilterModel" "userDashboardColumns" "userDashboardColumns" "save" "userDashboardColumns" "survey" "filterSurveyQuestions" "save" "search" "save" "survey" "save" "jobs" "search" "save" "getuser" "getUsers" "getuser" "users" "canViewAllJobs" "userCanViewJob" "userDashboardColumns" "getDeadlines" "save" "userDashboardColumns" "save" "userDashboardColumns" "getDashboardColumns" "userDashboardColumns" "filterSetup" "save" "jobs" "job" "save" "userDashboardColumns" "userDashboardColumns" "userDashboardColumns" "search" "userDashboardColumns" "userDashboardColumns" "search" "save" "userDashboardColumns" "jobs" "job" "userDashboardColumns" "save" "userCanViewJob" "save" "jobs" "userDashboardColumns" "save" "files" "save" "files" "save" "processAndStoreDeadlineReminders" "save" "copy" "save" "bulkUpdate" "save" "files" "save" "files" "save" "getTeamSurveysAvailable" "save" "copy" "save" "job" "save" "newJob" "newJob" "save" "updateDefaults" "getUserSurveysAvailable" "job" "save" "files" "save" "search" "save" "newJob" "save" "saveIndividualSubscriptions" "save" "assigneesToJob"))
(setq read-expression-history '("mykey" "adlineReminderService" "m" "feature/CONCRETE-7440-refactor-remove-unnecessary-existing-multi-manager-code" "as recordCount" "(\".sortable\")" "helm-find-files"))
(setq face-name-history '("hl-line" "diff-added" "diff-removed" "diff-added" "auto-dim-other-buffers-face" "helm-selection" "diff-added" "diff-removed"))
(setq magit-revision-history '("feature/CP3-80-manage-need-a-specific-permission-to-allow-the-changing-of-statuses" "feature/CP3-18-permissions-issue-when-moving-folders" "origin/feature/CP3-145-postmark-emails-are-stating-incorrect-info" "develop" "origin/feature/CP3-80-manage-need-a-specific-permission-to-allow-the-changing-of-statuses" "origin/feature/CP3-80-manage-need-a-specific-permission-to-allow-the-changing-of-statuses" "develop" "feature/cp3-77-date-validation-improvement-in-manage-and-surveys-and-forms" "feature/CP3-18-permissions-issue-when-moving-folders" "feature/CP3-18-permissions-issue-when-moving-folders" "feature/cp3-77-date-validation-improvement-in-manage-and-surveys-and-forms" "feature/cp3-77-date-validation-improvement-in-manage-and-surveys-and-forms" "feature/CP3-18-permissions-issue-when-moving-folders" "develop" "feature/cp3-77-date-validation-improvement-in-manage-and-surveys-and-forms" "develop" "origin/feature/cp3-77-date-validation-improvement-in-manage-and-surveys-and-forms" "master" "feature/cp3-77-date-validation-improvement-in-manage-and-surveys-and-forms" "CP3-" "origin/feature/CP3-133-JCR-output-for-survey-134" "origin/feature/CP3-103-fix-slow-user-management-page-issue-jcr" "develop" "feature/CP3-133-JCR-output-for-survey-134" "develop" "hotfix/CP3-133-JCR-output-for-survey-134" "hotfix/CP3-133-JCR-output-for-survey-134" "master" "feature/CP3-18-permissions-issue-when-moving-folders" "develop" "master" "develop" "feature/CP3-18-permissions-issue-when-moving-folders" "feature/CP3-121-zip-includes-files-which-it-shouldnt" "feature/CP3-18-permissions-issue-when-moving-folders" "feature/CP3-121-zip-includes-files-which-it-shouldnt" "feature/CP3-18-permissions-issue-when-moving-folders" "feature/CP3-121-zip-includes-files-which-it-shouldnt" "feature/CP3-18-permissions-issue-when-moving-folders" "feature/CP3-121-zip-includes-files-which-it-shouldnt" "feature/CP3-18-permissions-issue-when-moving-folders" "feature/CP3-121-zip-includes-files-which-it-shouldnt" "feature/CP3-18-permissions-issue-when-moving-folders" "feature/CP3-121-zip-includes-files-which-it-shouldnt" "feature/CP3-18-permissions-issue-when-moving-folders" "feature/CP3-121-zip-includes-files-which-it-shouldnt" "feature/CP3-57-permissions-can-circumvent-download-restrictions-in-some-remaining-circumstances" "develop" "feature/CP3-57-permissions-can-circumvent-download-restrictions-in-some-remaining-circumstances" "feature/CP3-18-permissions-issue-when-moving-folders" "feature/CP3-57-permissions-can-circumvent-download-restrictions-in-some-remaining-circumstances" "feature/CP3-107-publish-save-buttons-no-longer-hide-automatically-for-folders-without-permissions" "feature/CP3-107-publish-save-buttons-no-longer-hide-automatically-for-folders-without-permissions" "feature/CP3-54-MT-jcr-manage-dashboard-spins-endlessly" "feature/CP3-54-MT-jcr-manage-dashboard-spins-endlessly" "feature/CP3-18-permissions-issue-when-moving-folders" "feature/CP3-121-zip-includes-files-which-it-shouldnt" "master" "feature/CP3-18-permissions-issue-when-moving-folders" "develop" "feature/CP3-121-zip-includes-files-which-it-shouldnt" "develop" "feature/CP3-121-zip-includes-files-which-it-shouldnt" "origin/feature/CP3-54-MT-jcr-manage-dashboard-spins-endlessly" "feature/CP3-18-permissions-issue-when-moving-folders" "develop" "origin/feature/CP3-18-permissions-issue-when-moving-folders" "feature/CP3-18-permissions-issue-when-moving-folders" "develop" "feature/CP3-107-publish-save-buttons-no-longer-hide-automatically-for-folders-without-permissions" "develop" "develop" "feature/CP3-18-permissions-issue-when-moving-folders" "develop" "feature/CP3-18-permissions-issue-when-moving-folders" "feature/CP3-107-publish-save-buttons-no-longer-hide-automatically-for-folders-without-permissions" "master" "feature/CP3-107-publish-save-buttons-no-longer-hide-automatically-for-folders-without-permissions" "master" "hotfix/CP3-103-fix-slow-user-management-page-issue-jcr" "hotfix/CP3-103-fix-slow-user-management-page-issue-jcr" "feature/CP3-107-publish-save-buttons-no-longer-hide-automatically-for-folders-without-permissions" "feature/CP3-107-publish-save-buttons-no-longer-hide-automatically-for-folders-without-permissions" "origin/hotfix/CP3-103-fix-slow-user-management-page-issue-jcr" "master" "feature/CP3-107-publish-save-buttons-no-longer-hide-automatically-for-folders-without-permissions" "feature/CP3-120-download-permission-workaround" "feature/CP3-107-publish-save-buttons-no-longer-hide-automatically-for-folders-without-permissions" "origin/feature/CP3-57-permissions-can-circumvent-download-restrictions-in-some-remaining-circumstances" "feature/CP3-57-permissions-can-circumvent-download-restrictions-in-some-remaining-circumstances" "feature/CP3-120-download-permission-workaround" "feature/CP3-57-permissions-can-circumvent-download-restrictions-in-some-remaining-circumstances" "develop" "develop" "develop" "origin/feature/CP3-120-download-permission-workaround" "feature/CP3-120-download-permission-workaround" "develop" "origin/feature/CP3-107-publish-save-buttons-no-longer-hide-automatically-for-folders-without-permissions" "feature/CP3-107-publish-save-buttons-no-longer-hide-automatically-for-folders-without-permissions"))
(setq shell-command-history '("filedetailss" "change" "    \"user\": " ",
    \"password\": " #("sUserInfo" 0 8 (face font-lock-variable-name-face) 8 9 (rear-nonsticky t face font-lock-variable-name-face)) "downloadFile" "@maxExpiringAssetCountDownDays" "@noAccessRestriction" "@viewOnlyRestriction" "@allowShareViewDownload" "@noAccessRestriction" "@viewOnlyRestriction" "]," "#IDX_Table" "[logicalComponent]" " CFSQLType = \"CF_SQL_VARCHAR\" />" "cfthrow" "=\""))
(setq query-replace-history '("readonly disabled" "disabled" "readonly" "_11" "_5" "_10" "_5" "sRangeOperatorValue" "iRangeOperatorValue" "sRangeOperatorValue" "iRangeOperatorValue" "qGetCachedData" "qGetCaachedData" " ) />" " />" "( " " = " "variables.instance. this.set" "this.set" "variables.instance." "this.set" "variables.instance." "() />" " />" "this.get" "variables.instance." "getiQuestionTypeId" "getQuestionTypeId" "getiQuestionTypeId" "getQuestionTypeId" "getQuestionTypeId" "getsRangeOperatorValue" "getiRangeOperatorValue" "getbValidateRange" "getValidateRange" ";" " />" ";" " />" "" "<cfset " "rangeOperator" "arguments.oQuestion.getValidationTypeId()" "," "
," "\"
,\"" "\",\"" "\", " "\",\"" ",   " ",  " ", " ", " ",Thursday \",\"Thursday" ",Saturday \",\"Saturday" ",Friday \",\"Friday" ",Thursday \",\"Thursday" ",Wednesday \",\"Wednesday" ",Tuesday \",\"Tuesday" ",Monday \",\"Monday" ",Sunday \",\"Sunday" "\",\"Saturday" ",Saturday" "\",\"Sunday" ",Sunday" ",Sunday" " " ", " ", " ",   " " " ", " ", " ",Monday \",\"Monday" ",Sunday \",\"Sunday" "\",\"Saturday" ",Saturday" ",Saturday ,,,,Saturday" ",Friday ,,,,Friday" ",Thursday ,,,,Thursday" ",Thurdsday ,,,,Thursday" ",Wednesday ,,,,Wednesday" ",Tuesday ,,,,Tuesday" ",Monday ,,,,Monday" ",,,,Sunday" ",Sunday" " " ", " "" ", " "" " top=\"10\"" "survey_responses" "seurvey_responses" "resposnes" "reposnes" "oCachedData" "cachedData"))
(setq helm-grep-history '("getmysurvey" #("getAdditionalFields" 0 18 (face font-lock-string-face) 18 19 (face font-lock-string-face rear-nonsticky t)) #("dashboard" 8 9 (rear-nonsticky t)) "goXLS" #("exportExcel" 10 11 (rear-nonsticky t)) #("logicalMethod=search" 0 20 (face font-lock-string-face)) #("jobManagement.JobManagement" 0 9 (face font-lock-string-face) 9 26 (face font-lock-string-face) 26 27 (rear-nonsticky t face font-lock-string-face)) #("icon-export" 10 11 (rear-nonsticky t))))
(setq helm-M-x-input-history '("json" "customize" "esh" "dash" "eshell" "package" "projectile-r" "dash" #("cfargument" 0 10 (help-echo "Undeclared variable" point-entered js3-echo-help font-lock-face js3-external-variable-face fontified t)) "helm mu" "helm" "isearch buffer" #("cfdump" 0 6 (help-echo "Undeclared variable" point-entered js3-echo-help font-lock-face js3-external-variable-face fontified t)) "helm" "helm-mul" "isearch buffers" "isearch buffer" "isearch-b" "helm-mu" "isearch-b" "multi" "dash" "esh" "shell" "dash" "helm-yas-complet" "dash" "shell" "cust" "js2" "das" "dash" "js2" "dash" "custom" "mark-all" "custom" #("ARGUMENTS.accessLevel" 0 21 (fontified t)) "white" "dash" "c-h" "con" "pack" "packa" "package" "packages" "packag" "tmm" " tmm-menubar" "indent re" "html" #("M-¥" 0 2 (fontified t face font-lock-string-face) 2 3 (fontified t rear-nonsticky t face font-lock-string-face)) "helm-sho" "eval" "js2" "-rg" "js2" "theme" "packag" "cust" "pack" "cust" "color" "dash" "global-h" "custom" "helm" "color" "custom-th" "cust" "packag" "dash" "sql" "dash" "js-m" "js-mo" "js-m" "packa" "pack" "cus" "customize" "cust" "packages" "shel" "ter" "sh" "custom" "packages" "cust" "custom" "cust" "cus" "dash" "form" "cust" "form" "cust" "custom" "form" "fo"))
(setq search-ring '("scheds" "url = " "cfschedule" "getOrg" "getorg" "organisations" "cflocation" "			<cflocation addtoken=\"false\"  url=\"left_menu_index.cfm?page=managefolders&reloadleftmenu=yes\">
" #("			<cflocation addtoken=\"false\"  url=\"LEFT_MENU_index.cfm?page=managefolders&reloadleftmenu=yes\">
" 0 4 (fontified t) 4 14 (help-echo "Undeclared variable" point-entered js3-echo-help font-lock-face js3-external-variable-face fontified t) 14 15 (fontified t) 15 23 (help-echo "Undeclared variable" point-entered js3-echo-help font-lock-face js3-external-variable-face fontified t) 23 24 (fontified t) 24 31 (font-lock-face font-lock-string-face fontified t) 31 33 (fontified t) 33 36 (help-echo "Undeclared variable" point-entered js3-echo-help font-lock-face js3-external-variable-face fontified t) 36 37 (fontified t) 37 96 (font-lock-face font-lock-string-face fontified t) 96 98 (fontified t)) "FilderContent" "FolderContent" "copyfilestojobs" "copyFilesToJOb" #("CopyFilesToJob" 0 14 (help-echo "Undeclared variable" point-entered js3-echo-help font-lock-face js3-external-variable-face fontified t)) "managefoldersproccess" #("getFileDetails" 0 14 (fontified t))))
(setq anzu--history '("#dashboard .qu" ".qu" "jm.filter filter.manage.data" "filter.manage.data" "jm.filter" "3" "@zoneAdminAccessLevel" "2" "@noAccessRestriction" "1" "@SuperUserGroupId" "0" "@accessViaPublish" "0" "@allowShareViewDownload" "0" "@isSuperUser" "3" "@userOrgId" "128" "@userGroupId" "4" "@shopFileZoneId" "766544" "@fileId" "90" "@maxExpiringAssetCountDownDays" "1787" "@clientId" "3" "@userGroupId" "3" "@zoneAdminAccessLevel" "2" "@noAccessRestriction" "1" "@viewOnlyRestriction" "1" "@SuperUserGroupId" "0" "@accessViaPublish" "0" "@allowShareViewDownload" "0" "@isSuperUser" "3" "@userOrgId" "128" "@shopFileZoneId" "4" "@shopFileZoneId" "761323" "@fileId" "90" "@maxExpiringAssetCountDownDays" "1787" "@clientId" "3" "@zoneAdminAccessLevel" "2" "@noAccessRestriction" "1" "@viewOnlyRestriction" "1" "@viewOnlyRestriction" "1" "@SuperUserGroupId" "55302" "@clientId" "0" "@accessViaPublish" "1" "@allowShareViewDownload" "0" "@isSuperUser" "1" "@userOrgId" "1" "@userGroupId" "4" "@shopFileZoneId" "761329" "@fileId" "90" "@maxExpiringAssetCountDownDays" "data" "ret.data" "data" "ret.data" "
" "," "<td" "<th" "], ]" "[ , ["))
(setq minibuffer-history '("origin" #("schedServer" 0 11 (fontified t font-lock-face js3-external-variable-face point-entered js3-echo-help help-echo "Undeclared variable")) "sched" #("AND" 0 3 (fontified t)) "admin organi" #("GetDate" 0 7 (fontified t font-lock-face js3-external-variable-face point-entered js3-echo-help help-echo "Undeclared variable")) "group" "Select an organisation" "App" "LeftMenu_DeleteFolderAndSubfolders" "LeftMenu_DeleteLinkFolder_CheckChildren" "LeftMenu_RenameFolder" "LeftMenu_CreateFolderAndJob" "LeftMenu_MoveFolder" "cflocation" "LeftMenu_MoveFolder" "LeftMenu_ManageFolders" "AddFilesToMenu" "LeftMenu_AddFilesProccess" "LeftMenu_AddFiles" "LeftMenu_ManageFolders" "LeftMenu_ManageFoldersProccess" "LEFT_MENU_index.cfm" "/Users/john.nicola/sites/concrete-platform/CP2/pLEFT_MENU/" "LeftMenu_AddFiles.cfm" "leftmenu_movefolder" "leftmenu_createfolderandjob" "leftmenu_renamefolder" #("SESSION.currentFileZoneID" 0 25 (fontified t)) "leftmenu_deletelinkfolder_checkchildren" "leftmenu_deletefolderandsubfolders" "LeftMenu_DeleteFolderAndSubfolders" "LeftMenu_DeleteLinkFolder_CheckChildren" "LeftMenu_RenameFolder" "LeftMenu_CreateFolderAndJob" "LeftMenu_MoveFolde" "managefoldersproccess" "LeftMenu_MoveFolder" #("LeftMenu_ManageFoldersProccess" 0 29 (face font-lock-string-face) 29 30 (face font-lock-string-face rear-nonsticky t)) "LEFT_MENU_index.cfm"
;;;  #("modified" 0 8 (face magit-diff-file-heading magit-section #s(#s(eieio--class magit-file-section nil (#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#5 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil))) [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil) #s(cl-slot-descriptor source nil t nil) #s(cl-slot-descriptor header nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11 source 12 header 13)) (magit-module-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#3 nil nil nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) file "CP2/core/root/download.cfm" #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> t nil nil nil ((magit-status-sections-hook magit-insert-unstaged-changes)) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#4 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) unstaged nil #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> nil nil nil nil ((magit-status-sections-hook magit-insert-unstaged-changes)) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#5 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) status nil #<marker (moves after insertion) in no buffer> nil #<marker in no buffer> nil nil nil nil nil nil (#s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#7 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) branch "feature/CP3-18-permissions-issue-when-moving-folders" #<marker (moves after insertion) in no buffer> #<marker (moves after insertion) in no buffer> #<marker in no buffer> nil nil nil nil ((magit-status-headers-hook magit-insert-head-branch-header) (magit-status-sections-hook magit-insert-status-headers)) #4 (#s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#9 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) branch #("origin/feature/CP3-18-permissions-issue-when-moving-folders" 0 59 (face magit-branch-remote)) #<marker (moves after insertion) in no buffer> nil #<marker in no buffer> nil nil nil nil ((magit-status-headers-hook magit-insert-upstream-branch-header) (magit-status-sections-hook magit-insert-status-headers)) #6 nil) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#9 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) branch "origin/feature/CP3-18-permissions-issue-when-moving-folders" #<marker (moves after insertion) in no buffer> nil #<marker in no buffer> nil nil nil nil ((magit-status-headers-hook magit-insert-push-branch-header) (magit-status-sections-hook magit-insert-status-headers)) #6 nil) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#9 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) tag "CONCRETE-6636-file-subscription-emails-move-copy" #<marker (moves after insertion) in no buffer> nil #<marker in no buffer> nil nil nil nil ((magit-status-headers-hook magit-insert-tags-header) (magit-status-sections-hook magit-insert-status-headers)) #6 nil))) #3 #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#7 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) staged nil #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> nil nil nil nil ((magit-status-sections-hook magit-insert-staged-changes)) #4 (#s(#s(eieio--class magit-file-section nil (#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#11 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil))) [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil) #s(cl-slot-descriptor source nil t nil) #s(cl-slot-descriptor header nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11 source 12 header 13)) (magit-module-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#9 nil nil nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) file "CP2/core/objects/platform/folder.cfc" #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> t nil nil nil ((magit-status-sections-hook magit-insert-staged-changes)) #6 (#s(#s(eieio--class magit-hunk-section nil (#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#13 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil))) [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil) #s(cl-slot-descriptor refined nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11 refined 12)) nil ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#11 nil nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) hunk (nil "-378,6" "+378,6") #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> nil magit-diff-paint-hunk nil nil ((magit-status-sections-hook magit-insert-staged-changes)) #8 nil nil)) nil "diff --git CP2/core/objects/platform/folder.cfc CP2/core/objects/platform/folder.cfc
;;; index 486cc0080..53cfa0cc9 100644
;;; --- CP2/core/objects/platform/folder.cfc
;;; +++ CP2/core/objects/platform/folder.cfc
;;; ") #s(#s(eieio--class magit-file-section nil (#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#11 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil))) [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil) #s(cl-slot-descriptor source nil t nil) #s(cl-slot-descriptor header nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11 source 12 header 13)) (magit-module-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#9 nil nil nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) file "CP2/core/objects/vault/file.cfc" #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> t nil nil nil ((magit-status-sections-hook magit-insert-staged-changes)) #6 (#s(#s(eieio--class magit-hunk-section nil (#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#13 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil))) [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil) #s(cl-slot-descriptor refined nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11 refined 12)) nil ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#11 nil nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) hunk (nil "-536,6" "+536,6") #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> nil magit-diff-paint-hunk nil nil ((magit-status-sections-hook magit-insert-staged-changes)) #8 nil nil)) nil "diff --git CP2/core/objects/vault/file.cfc CP2/core/objects/vault/file.cfc
;;; index 08dc2fab9..3d043e963 100644
;;; --- CP2/core/objects/vault/file.cfc
;;; +++ CP2/core/objects/vault/file.cfc
;;; "))) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#7 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) stashes "refs/stash" #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> nil nil nil nil ((magit-status-sections-hook magit-insert-stashes)) #4 (#s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#9 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) stash "stash@{0}" #<marker (moves after insertion) in no buffer> nil #<marker in no buffer> nil nil nil nil ((magit-status-sections-hook magit-insert-stashes)) #6 nil) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#9 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) stash "stash@{1}" #<marker (moves after insertion) in no buffer> nil #<marker in no buffer> nil nil nil nil ((magit-status-sections-hook magit-insert-stashes)) #6 nil) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#9 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) stash "stash@{2}" #<marker (moves after insertion) in no buffer> nil #<marker in no buffer> nil nil nil nil ((magit-status-sections-hook magit-insert-stashes)) #6 nil) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#9 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) stash "stash@{3}" #<marker (moves after insertion) in no buffer> nil #<marker in no buffer> nil nil nil nil ((magit-status-sections-hook magit-insert-stashes)) #6 nil) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#9 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) stash "stash@{4}" #<marker (moves after insertion) in no buffer> nil #<marker in no buffer> nil nil nil nil ((magit-status-sections-hook magit-insert-stashes)) #6 nil) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#9 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) stash "stash@{5}" #<marker (moves after insertion) in no buffer> nil #<marker in no buffer> nil nil nil nil ((magit-status-sections-hook magit-insert-stashes)) #6 nil) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#9 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) stash "stash@{6}" #<marker (moves after insertion) in no buffer> nil #<marker in no buffer> nil nil nil nil ((magit-status-sections-hook magit-insert-stashes)) #6 nil) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#9 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) stash "stash@{7}" #<marker (moves after insertion) in no buffer> nil #<marker in no buffer> nil nil nil nil ((magit-status-sections-hook magit-insert-stashes)) #6 nil))) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#7 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) unpushed "@{upstream}.." #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> t nil nil nil ((magit-status-sections-hook magit-insert-unpushed-to-upstream-or-recent)) #4 (#s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#9 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) commit "9aeafb695" #<marker (moves after insertion) in no buffer> nil #<marker in no buffer> nil nil nil nil ((magit-status-sections-hook magit-insert-unpushed-to-upstream-or-recent)) #6 nil) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#9 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) commit "e063368d9" #<marker (moves after insertion) in no buffer> nil #<marker in no buffer> nil nil nil nil ((magit-status-sections-hook magit-insert-unpushed-to-upstream-or-recent)) #6 nil) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#9 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) commit "785c96c20" #<marker (moves after insertion) in no buffer> nil #<marker in no buffer> nil nil nil nil ((magit-status-sections-hook magit-insert-unpushed-to-upstream-or-recent)) #6 nil) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#9 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) commit "81a385d8c" #<marker (moves after insertion) in no buffer> nil #<marker in no buffer> nil nil nil nil ((magit-status-sections-hook magit-insert-unpushed-to-upstream-or-recent)) #6 nil) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#9 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) commit "85094e62f" #<marker (moves after insertion) in no buffer> nil #<marker in no buffer> nil nil nil nil ((magit-status-sections-hook magit-insert-unpushed-to-upstream-or-recent)) #6 nil) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#9 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) commit "54603bcd2" #<marker (moves after insertion) in no buffer> nil #<marker in no buffer> nil nil nil nil ((magit-status-sections-hook magit-insert-unpushed-to-upstream-or-recent)) #6 nil) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#9 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) commit "a9b53b04e" #<marker (moves after insertion) in no buffer> nil #<marker in no buffer> nil nil nil nil ((magit-status-sections-hook magit-insert-unpushed-to-upstream-or-recent)) #6 nil) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#9 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) commit "6fae3f3a3" #<marker (moves after insertion) in no buffer> nil #<marker in no buffer> nil nil nil nil ((magit-status-sections-hook magit-insert-unpushed-to-upstream-or-recent)) #6 nil) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#9 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) commit "21c7533f8" #<marker (moves after insertion) in no buffer> nil #<marker in no buffer> nil nil nil nil ((magit-status-sections-hook magit-insert-unpushed-to-upstream-or-recent)) #6 nil) #s(#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#9 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) commit "281b27b84" #<marker (moves after insertion) in no buffer> nil #<marker in no buffer> nil nil nil nil ((magit-status-sections-hook magit-insert-unpushed-to-upstream-or-recent)) #6 nil))))) (#s(#s(eieio--class magit-file-section nil (#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#8 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil))) [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil) #s(cl-slot-descriptor source nil t nil) #s(cl-slot-descriptor header nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11 source 12 header 13)) (magit-module-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#6 nil nil nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) file "CP2/Application.cfc" #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> t nil nil nil ((magit-status-sections-hook magit-insert-unstaged-changes)) #3 (#s(#s(eieio--class magit-hunk-section nil (#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#10 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil))) [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil) #s(cl-slot-descriptor refined nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11 refined 12)) nil ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#8 nil nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) hunk (nil "-3,5" "+3,5") #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> nil magit-diff-paint-hunk nil nil ((magit-status-sections-hook magit-insert-unstaged-changes)) #5 nil nil)) nil "diff --git CP2/Application.cfc CP2/Application.cfc
;;; index 744f3de86..e0fae1efb 100644
;;; --- CP2/Application.cfc
;;; +++ CP2/Application.cfc
;;; ") #2)) (#s(#s(eieio--class magit-hunk-section nil (#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#7 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil))) [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil) #s(cl-slot-descriptor refined nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11 refined 12)) nil ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#5 nil nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) hunk (nil "-13,4" "+13,8") #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> nil nil nil nil ((magit-status-sections-hook magit-insert-unstaged-changes)) #2 nil nil) #s(#s(eieio--class magit-hunk-section nil (#s(eieio--class magit-section nil nil [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11)) (magit-hunk-section magit-file-section) ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#7 nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil))) [#s(cl-slot-descriptor type nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor start nil t nil) #s(cl-slot-descriptor content nil t nil) #s(cl-slot-descriptor end nil t nil) #s(cl-slot-descriptor hidden nil t nil) #s(cl-slot-descriptor washer nil t nil) #s(cl-slot-descriptor process nil t nil) #s(cl-slot-descriptor heading-highlight-face nil t nil) #s(cl-slot-descriptor inserter (symbol-value 'magit--current-section-hook) t nil) #s(cl-slot-descriptor parent nil t nil) #s(cl-slot-descriptor children nil t nil) #s(cl-slot-descriptor refined nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (type 0 value 1 start 2 content 3 end 4 hidden 5 washer 6 process 7 heading-highlight-face 8 inserter 9 parent 10 children 11 refined 12)) nil ((:type . type) (:value . value) (:start . start) (:parent . parent)) [] [] #s(#5 nil nil nil nil nil nil nil nil nil nil nil nil nil) (:custom-groups nil)) hunk (nil "-24,5" "+28,5") #<marker (moves after insertion) in no buffer> #<marker in no buffer> #<marker in no buffer> nil nil nil nil ((magit-status-sections-hook magit-insert-unstaged-changes)) #2 nil nil)) nil "diff --git CP2/core/root/download.cfm CP2/core/root/download.cfm
;;; index d607388dc..0ca11d382 100644
;;; --- CP2/core/root/download.cfm
;;; +++ CP2/core/root/download.cfm
;;; ") keymap (keymap (3 keymap (5 . magit-diff-edit-hunk-commit) (20 . magit-diff-trace-definition)) (38 . magit-do-async-shell-command) (117 . magit-unstage) (115 . magit-stage) (67 . magit-commit-add-log) (97 . magit-apply) (remap keymap (magit-revert-no-commit . magit-reverse) (magit-delete-thing . magit-discard) (magit-visit-thing . magit-diff-visit-file)) (C-return . magit-diff-visit-file-worktree) (10 . magit-diff-visit-file-worktree))))
 "downloa" "file" "downl" "edit_us" #("_passthrough" 0 12 (fontified t)) "download" "rest" "scr" "plat folder.cf" "Folder" "rest" "1585" "SetExpiryDate" "setExpiryDate-save" "FolderContent" "authentication_validate" "Appl" #("getJobManagementInformationByJobId" 0 34 (fontified t)) "PostmarkService" "sendSubscriptionEmails" "jobmanagement" "getJobManagementInformationByJobId" "lastModifiedByUserName" "warning" "App" "feature/CP3-145-postmark-emails-are-stating-incorrect-info" "scr" "has just been modified by" "statusBriefSubmitted" "jm-detailsActionsSelect" #("&" 0 1 (fontified t)) "bulk-update" "userCanDeleteJob" "can_delete" "=" "templ" "sprint" #("EXISTS" 0 6 (fontified t face font-lock-keyword-face)) "sprint" "status_change_only" "displaySurveyForJobForm" "=" #("disableFields" 0 13 (fontified t)) "questionDe" "/Users/john.nicola/sites/concrete-platform/cp2/core/objects/formBuilder/question/" "deadl" #("canStatusChangeOnly" 0 19 (fontified t font-lock-face js3-external-variable-face point-entered js3-echo-help help-echo "Undeclared variable")) "displaySurveyForJobForm" #("function" 0 8 (fontified t font-lock-face font-lock-keyword-face)) "jobmanage" "canstatuschangeonly" #("canStatusChangeOnly" 0 19 (fontified t)) "\"con.jm" "spri" #("canEditJob" 0 10 (fontified t face font-lock-string-face)) #("buttons-bar.cfm" 0 15 (fontified t face font-lock-string-face)) "buttons-bar" "\"statusList\"" "persistHeader"))
(setq file-name-history '("~/sites/concrete-platform/CP2/pLEFT_MENU/LeftMenu_AddFiles.cfm" #("~/sites/concrete-platform/CP2/core/root/rest/index.cfm" 1 2 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/root/rest/index.cfm") 2 54 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/root/rest/index.cfm")) "~/sites/concrete-platform/CP2/core/application/pPassPolicy/inc/public_authentication_validate.cfm" #("~/sites/concrete-platform/CP2/Application.cfc" 1 2 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/Application.cfc") 2 45 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/Application.cfc")) #("~/sites/concrete-platform/CP2/core/objects/jobManagement/JobManagement.cfc" 1 2 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/objects/jobManagement/JobManagement.cfc") 2 74 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/objects/jobManagement/JobManagement.cfc")) #("~/sites/concrete-platform/CP2/core/application/jobManagement/templates.cfm" 1 2 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/application/jobManagement/templates.cfm") 2 74 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/application/jobManagement/templates.cfm")) #("~/sites/cp3-db-release-scripts/releases/sprint-40/pre_core.sql" 1 2 (match-part "/Users/john.nicola/sites/cp3-db-release-scripts/releases/sprint-40/pre_core.sql") 2 62 (match-part "/Users/john.nicola/sites/cp3-db-release-scripts/releases/sprint-40/pre_core.sql")) #("~/sites/concrete-platform/CP2/core/objects/formBuilder/question/type/questionDeadlineDate.cfc" 1 2 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/objects/formBuilder/question/type/questionDeadlineDate.cfc") 2 93 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/objects/formBuilder/question/type/questionDeadlineDate.cfc")) "~/sites/concrete-platform/cp2/core/objects/formBuilder/question/question.cfc" #("~/sites/concrete-platform/cp2/core/objects/formBuilder/question/type/questionDeadlineDate.cfc" 1 2 (match-part "/Users/john.nicola/sites/concrete-platform/cp2/core/objects/formBuilder/question/type/questionDeadlineDate.cfc") 2 93 (match-part "/Users/john.nicola/sites/concrete-platform/cp2/core/objects/formBuilder/question/type/questionDeadlineDate.cfc")) "~/sites/cp3-db-release-scripts/releases/sprint-40/post_core.sql" "~/sites/cp3-db-release-scripts/releases/sprint-36/pre_core.sql" "~/sites/cp3-db-release-scripts/releases/sprint-36/post_core.sql" "~/sites/cp3-db-release-scripts/releases/sprint-36/post_client.sql" "~/sites/cp3-db-release-scripts/releases/sprint-36/pre_client.sql" "~/sites/cp3-db-release-scripts/releases/sprint-37/pre_client.sql" "~/sites/cp3-db-release-scripts/releases/sprint-38/pre_client.sql" "~/sites/cp3-db-release-scripts/releases/sprint-39/pre_client.sql" #("~/sites/cp3-db-release-scripts/releases/sprint-40/pre_client.sql" 1 2 (match-part "/Users/john.nicola/sites/cp3-db-release-scripts/releases/sprint-40/pre_client.sql") 2 64 (match-part "/Users/john.nicola/sites/cp3-db-release-scripts/releases/sprint-40/pre_client.sql")) #("~/sites/concrete-platform/CP2/core/objects/jobManagement/database.cfc" 1 2 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/objects/jobManagement/database.cfc") 2 69 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/objects/jobManagement/database.cfc")) #("~/sites/concrete-platform/CP2/core/root/ajax.cfc" 1 2 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/root/ajax.cfc") 2 48 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/root/ajax.cfc")) "~/Desktop/code/cp3-77-date-validation-improvement-in-manage-and-surveys-and-forms/questionDeadlineDate.cfc" #("~/sites/concrete-platform/CP2/core/objects/platform/folder.cfc" 1 2 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/objects/platform/folder.cfc") 2 62 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/objects/platform/folder.cfc")) "~/sites/concrete-platform/CP2/core/objects/formBuilder/ajaxMySurvey.cfc" "~/sites/concrete-platform/CP2/core/webcore/src/CP/core/Panel/views/Panel.js" "~/sites/concrete-platform/CP2/core/objects/jobManagement/CachedData.cfc" #("~/sites/concrete-platform/CP2/core/objects/CachedData.cfc" 1 2 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/objects/CachedData.cfc") 2 57 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/objects/CachedData.cfc")) "~/sites/concrete-platform/CP2/core/objects/formBuilder/question/questionDAO.cfc" "~/sites/concrete-platform/CP2/core/objects/formBuilder/question/type/questionCountrySelect.cfc" "~/sites/concrete-platform/CP2/core/objects/formBuilder/question/type/questionConditional.cfc" "~/sites/concrete-platform/CP2/core/objects/formBuilder/question/question.cfc" "~/.emacs.d/snippets/html-mode/cfproperty.yasnippet" "~/.emacs.d/snippets/html-mode/cfparam.yasnippet" #("~/sites/concrete-platform/CP2/core/objects/formBuilder/question/questionBuilder.cfc" 1 2 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/objects/formBuilder/question/questionBuilder.cfc") 2 83 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/objects/formBuilder/question/questionBuilder.cfc")) "~/sites/concrete-platform/CP2/core/objects/formBuilder/validation/validationDAO.cfc" "~/sites/concrete-platform/CP2/core/objects/formBuilder/question/questionService.cfc" "~/sites/concrete-platform/CP2/core/objects/formBuilder/validation/validationDAO.cfc" "~/sites/concrete-platform/CP2/core/objects/formBuilder/question/questionService.cfc" "~/sites/concrete-platform/CP2/core/webcore/src/CP/core/mixins/vault/folder.js" "~/Downloads/Holiday 2018 Store Hours_Alarm Hours_Detail_18-11-2018_085548_2.csv" "~/Downloads/1how-to-consult-on-an-individual-basis-during-a-redundancy-exercise.pdf" "~/sites/concrete-platform/CP2/core/application/pFormBuilder/surveyCollectors.cfm" "~/Downloads/.~lock.Holiday 2018 Store Hours_Alarm Hours_Detail_18-11-2018_085548_2.csv#" #("~/sites/concrete-platform/CP2/core/application/pFormBuilder/surveyExportDetail.cfm" 1 2 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/application/pFormBuilder/surveyExportDetail.cfm") 2 82 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/application/pFormBuilder/surveyExportDetail.cfm")) "~/sites/concrete-platform/CP2/core/utils/utils.cfc" "~/sites/concrete-platform/CP2/core/objects/formBuilder/question/questionService.cfc" #("~/sites/concrete-platform/server.json" 1 2 (match-part "/Users/john.nicola/sites/concrete-platform/server.json") 2 37 (match-part "/Users/john.nicola/sites/concrete-platform/server.json")) "~/sites/concrete-platform/CP2/core/objects/poi/POIUtility.cfc" "~/prelude/snippets/prog-mode/buildandrundevelopment.yasnippet" #("~/sites/concrete-platform/CP2/core/objects/formBuilder/validation/validationDAO.cfc" 1 2 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/objects/formBuilder/validation/validationDAO.cfc") 2 83 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/objects/formBuilder/validation/validationDAO.cfc")) #("~/sites/concrete-platform/CP2/core/objects/folders/folder.cfc" 1 2 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/objects/folders/folder.cfc") 2 61 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/objects/folders/folder.cfc")) #("~/sites/concrete-platform/CP2/core/objects/platform/cfcRestriction.cfc" 1 2 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/objects/platform/cfcRestriction.cfc") 2 70 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/objects/platform/cfcRestriction.cfc")) #("~/sites/concrete-platform/CP2/cfcClasses/cfcFileZone.cfc" 1 2 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/cfcClasses/cfcFileZone.cfc") 2 56 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/cfcClasses/cfcFileZone.cfc")) #("~/sites/concrete-platform/CP2/core/webcore/src/CP/core/ParameterisedCollection/ParameterisedCollection.js" 1 2 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/webcore/src/CP/core/ParameterisedCollection/ParameterisedCollection.js") 2 105 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/webcore/src/CP/core/ParameterisedCollection/ParameterisedCollection.js")) #("~/sites/concrete-platform/CP2/core/webcore/src/CP/vault/collections/VaultCollection.js" 1 2 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/webcore/src/CP/vault/collections/VaultCollection.js") 2 86 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/webcore/src/CP/vault/collections/VaultCollection.js")) "~/sites/concrete-platform/CP2/core/objects/vault/myFolders.cfc" "~/sites/concrete-platform/CP2/core/webcore/src/CP/vault/collections/MyFoldersListCollection.js" "~/sites/concrete-platform/CP2/core/objects/publish/page.cfc" "~/sites/concrete-platform/CP2/core/objects/fileZone/fileZone.cfc" #("~/sites/concrete-platform/CP2/core/webcore/src/CP/publish/views/Content.js" 1 2 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/webcore/src/CP/publish/views/Content.js") 2 74 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/webcore/src/CP/publish/views/Content.js")) #("~/sites/concrete-platform/CP2/core/webcore/src/CP/publish/views/PageActions.js" 1 2 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/webcore/src/CP/publish/views/PageActions.js") 2 78 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/webcore/src/CP/publish/views/PageActions.js")) #("~/sites/concrete-platform/CP2/core/objects/publish/story.cfc" 1 2 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/objects/publish/story.cfc") 2 60 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/objects/publish/story.cfc")) "~/sites/concrete-platform/CP2/core/webcore/src/CP/publish/views/story/edit/ButtonEdit.js" "~/sites/concrete-platform/CP2/core/webcore/src/CP/publish/views/story/Story.js" #("~/sites/concrete-platform/CP2/core/application/jobManagement/form.cfm" 1 2 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/application/jobManagement/form.cfm") 2 69 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/application/jobManagement/form.cfm")) #("~/sites/concrete-platform/CP2/core/application/jobManagement/dashboard.cfm" 1 2 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/application/jobManagement/dashboard.cfm") 2 74 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/application/jobManagement/dashboard.cfm")) "~/sites/concrete-platform/CP2/core/objects/search.cfc" #("~/sites/concrete-platform/CP2/core/objects/download/zipBatchLogic.cfc" 1 2 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/objects/download/zipBatchLogic.cfc") 2 69 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/objects/download/zipBatchLogic.cfc")) #("~/sites/concrete-platform/CP2/core/application/pDownload/download.cfm" 1 2 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/application/pDownload/download.cfm") 2 69 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/application/pDownload/download.cfm")) "~/sites/concrete-platform/CP2/instagramTest.cfm" "~/sites/concrete-platform/CP2/core/templates/publish/stories.cfm" "~/sites/concrete-platform/CP2/menuRestrictions/act_setRestriction.cfm" "~/sites/concrete-platform/CP2/core/webcore/src/CP/publish/models/StoryModel.js" "~/sites/concrete-platform/CP2/core/webcore/src/CP/publish/models/StoryModel.js" "~/sites/concrete-platform/CP2/core/webcore/src/CP/publish/models/StoryModel.js" "~/sites/cp3-db-release-scripts/hotfix/CP3-103-fix-slow-user-management-page-issue-jcr/pre_client.sql" "~/sites/cp3-db-release-scripts/hotfix/CP3-103-fix-slow-user-management-page-issue-jcr/post_core.sql" "~/sites/cp3-db-release-scripts/hotfix/CP3-103-fix-slow-user-management-page-issue-jcr/post_client.sql" "~/sites/cp3-db-release-scripts/hotfix/CP3-103-fix-slow-user-management-page-issue-jcr./pre_client.sql" "~/sites/cp3-db-release-scripts/hotfix/sprint-39/pre_client.sql" #("~/sites/cp3-db-release-scripts/hotfix/CP3-103-fix-slow-user-management-page-issue-jcr.sql" 1 2 (match-part "/Users/john.nicola/sites/cp3-db-release-scripts/hotfix/CP3-103-fix-slow-user-management-page-issue-jcr.sql") 2 89 (match-part "/Users/john.nicola/sites/cp3-db-release-scripts/hotfix/CP3-103-fix-slow-user-management-page-issue-jcr.sql")) "~/sites/cp3-db-release-scripts/releases/sprint-38/pre_core.sql" "~/sites/cp3-db-release-scripts/releases/sprint-38/post_client.sql" "~/sites/cp3-db-release-scripts/releases/sprint-38/post_core.sql" "~/sites/cp3-db-release-scripts/releases/sprint-39/post_client.sql" "~/sites/concrete-platform/CP2/core/objects/download/zipBatchSql.cfc" "~/.emacs.d/personal/init.el" #("~/sites/concrete-platform/CP2/core/root/download.cfm" 1 2 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/root/download.cfm") 2 52 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/root/download.cfm")) "~/sites/concrete-platform/CP2/core/objects/filter/Filter.cfc" "~/sites/concrete-platform/CP2/menuRestrictions/act_setRestriction.cfm" "~/sites/concrete-platform/CP2/menuRestrictions/appGlobal.cfm" "~/sites/concrete-platform/CP2/menuRestrictions/index.cfm" #("~/sites/concrete-platform/CP2/core/layout/header.cfm" 1 2 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/layout/header.cfm") 2 52 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/layout/header.cfm")) #("~/sites/concrete-platform/CP2/core/root/index.cfm" 1 2 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/root/index.cfm") 2 49 (match-part "/Users/john.nicola/sites/concrete-platform/CP2/core/root/index.cfm")) #("~/.emacs.d/personal/mykeycommands.el" 1 2 (match-part "/Users/john.nicola/.emacs.d/personal/mykeycommands.el") 2 36 (match-part "/Users/john.nicola/.emacs.d/personal/mykeycommands.el")) #("~/Desktop/database.cfc" 1 2 (match-part "/Users/john.nicola/Desktop/database.cfc") 2 22 (match-part "/Users/john.nicola/Desktop/database.cfc")) "~/.emacs.d/projectile-bookmarks.eld" #("~/sites/cp3-db-release-scripts/releases/sprint-32/pre_client.sql" 1 2 (match-part "/Users/john.nicola/sites/cp3-db-release-scripts/releases/sprint-32/pre_client.sql") 2 64 (match-part "/Users/john.nicola/sites/cp3-db-release-scripts/releases/sprint-32/pre_client.sql")) "~/sites/concrete-platform/CP2/core/webcore/src/CP/publish/views/story/InstagramStory.js"))
(setq extended-command-history '(#("json-reformat-region" 0 20 (match-part "json-reformat-region")) "customize-variable" "eshell" "dash-at-point" "package-list-packages" "helm-multi-occur-from-isearch" "helm-multi-files" "shell" "helm-yas-complete" "js2-mode" "customize" "mc/mark-all-like-this" "whitespace-mode" "c-hungry-delete-forward" "er/contract-region" "package-autoremove" "indent-relative" "html-mode" "helm-show-kill-ring" "eval-buffer" "helm-rg-at-point" "load-theme" "customize-mode" "list-colors-display" "global-hl-line-mode" "helm-colors" "sql-mode" "js-mode" "prettier-js-mode" "projectile-run-term" "customize-face" "customize-group" "delete-trailing-whitespace" "back-button-local-forward" "list-packages" "back-button-mode" "ace-jump-word-mode" "replace-regexp" "query-replace-regexp" "server-edit" "ace-swap-window" "auto-dim-other-buffers-mode" "dumb-jump-go-other-window" "helm-rg" "magit-status" "css-mode" "helm-mini" "ffip" "toggle-frame-maximized" "browse-kill-ring" "json-mode" "expand-abbrev" "expand-jump-to-next-slot" "er/expand-region" "smartparens-mode" "sp-cheat-sheet" "electric-pair-mode" "show-smartparens-mode" "maximize-window" "toggle-frame-fullscreen" "winner-mode" "winner-undo" "ace-jump-mode" "ace-isearch-mode" "avy-goto-char-2" "universal-argument" "js3-mode" "ediff" "rgrep" "describe-variable" "calendar" "auto-complete-mode" "move-line-down" "mark-sexp" "dumb-jump-back" "sql-indent-line" "string-inflection-kebab-case" "auto-fill-mode" "bookmark-delete" "toggle-scroll-bar" "toggle-debug-on-error" "text-mode" "god-mode" "abbrev-mode" "count-words" "magit-process-buffer" "projectile-run-shell" "magit-pull-popup" "scroll-right" "toggle-truncate-lines" "scroll-all-mode" "diff" "ffap" "c-hungry-delete" "javascript-mode" "helm-projectile-rg" "html-imenu-setup" "lisp-mode" "regexp-builder" "dumb-jump-go" "other-frame" "avy-goto-word-0" "helm-occur-from-isearch" "my-insert-leading-tabs" "jn/clean-up-buffer" "whitespace-cleanup" "my-untabify-buffer" "dired" "eval-defun" "imenu-add-to-menubar" "imenu-add-menubar-index" "rainbow-delimiters-mode" "tabify" "pop-global-mark" "helm-locate" "helm-find-files" "helm-find" "list-matching-lines" "imenu"))
(setq search-ring '("scheds" "url = " "cfschedule" "getOrg" "getorg" "organisations" "cflocation" "			<cflocation addtoken=\"false\"  url=\"left_menu_index.cfm?page=managefolders&reloadleftmenu=yes\">
" #("			<cflocation addtoken=\"false\"  url=\"LEFT_MENU_index.cfm?page=managefolders&reloadleftmenu=yes\">
" 0 4 (fontified t) 4 14 (help-echo "Undeclared variable" point-entered js3-echo-help font-lock-face js3-external-variable-face fontified t) 14 15 (fontified t) 15 23 (help-echo "Undeclared variable" point-entered js3-echo-help font-lock-face js3-external-variable-face fontified t) 23 24 (fontified t) 24 31 (font-lock-face font-lock-string-face fontified t) 31 33 (fontified t) 33 36 (help-echo "Undeclared variable" point-entered js3-echo-help font-lock-face js3-external-variable-face fontified t) 36 37 (fontified t) 37 96 (font-lock-face font-lock-string-face fontified t) 96 98 (fontified t)) "FilderContent" "FolderContent" "copyfilestojobs" "copyFilesToJOb" #("CopyFilesToJob" 0 14 (help-echo "Undeclared variable" point-entered js3-echo-help font-lock-face js3-external-variable-face fontified t)) "managefoldersproccess" #("getFileDetails" 0 14 (fontified t))))
(setq regexp-search-ring '("scheds" "organisations" "cflocation" "copyfilestojob" "CopyFilesToJob" "getFileDetails" "getfoldersandfilesdatabylinkid" "getfolderdata" "FolderContent" "delete" "\\(delete\\).*?\\(all\\).*?\\(the\\).*?\\(cache\\)" "setexpirydate" "disablefields" "display" "caneditjob" "minDate"))
